# The contents of this file are pasted into global_costmap.global_costmap.ros__parameters and local_costmap.local_costmap.ros__parameters in the nav2.yaml file.
# If nav2.yaml contains its own parameters for these sections, they will override these parameters.
# I.e. properties from nav2.yaml are merged-in on top of those from here.
# Any parameters that are commented out with ##### here should be set in nav2.yaml.

# Reference frame.
global_frame: map # default: map
# Robot base frame.
robot_base_frame: base_link
# Topic of map from map_server or SLAM.
map_topic: /map # default: /map

# Costmap update frequency.
##### update_frequency: 1.0 # default: 5.0
# Frequency to publish costmap to topic.
##### publish_frequency: 1.0 # default: 1.0
# Whether to send full costmap every update, rather than updates.
always_send_full_costmap: false # default: false

# Width of costmap (m).
##### width: 5 # default: 5
# Height of costmap (m).
##### height: 5 # default: 5
# X origin of the costmap relative to width (m).
origin_x: 0.0 # default: 0.0
# Y origin of the costmap relative to height (m).
origin_y: 0.0 # default: 0.0
# Resolution of 1 pixel of the costmap, in meters.
##### resolution: 0.1 # default: 0.1

# Whether costmap should roll with robot base frame.
rolling_window: true # default: false
# If occupancy grid map should be interpreted as only 3 values (free, occupied, unknown) or with its stored values.
# trinary_costmap: true
# If false, treats unknown space as free space, else as unknown space.
track_unknown_space: false # default: false
# Whether when combining costmaps to use the maximum cost or override.
use_maximum: false # default: false

# Cost of unknown space if tracking it.
unknown_cost_value: 255 # default: 255
# Minimum cost of an occupancy grid map to be considered a lethal obstacle.
lethal_cost_threshold: 1000000 # default: 100

# TF transform tolerance.
transform_tolerance: 0.3 # seconds; default: 0.3
# Time to wait for the transform from robot base frame to global frame to become available. If exceeded, the configuration stage is aborted.
transform_timeout: 60.0 # seconds; default: 60.0

# Ordered set of footprint points passed in as a string, must be closed set. For example, the following defines a square base with side lengths of 0.2 meters footprint: “[ [0.1, 0.1], [0.1, -0.1], [-0.1, -0.1], [-0.1, 0.1] ]”. Note that this can also be adjusted over time using the costmap's ~/footprint topic, which will update the polygon over time as needed due to changes in the robot's state, such as movement of an attached manipulator, picking up a pallet, or other actions that adjust a robot's shape.
footprint: "[[0.4, 0.4], [0.4, -0.4], [-0.4, -0.4], [-0.4, 0.4]]" # default: "[]"
# Amount to pad footprint (m).
footprint_padding: 0.1 # default: 0.01
# Robot radius to use, if footprint coordinates not provided.
robot_radius: 0.7 # default: 0.1

# List of mapped costmap filter names for parameter namespaces and names.
# filters: [] # default: []
# WARNING: Do not explicitly set it to [] - it will complain.

# List of mapped plugin names for parameter namespaces and names.
plugins: [
  "obstacle_layer",
  "inflation_layer"
]
# default: ["static_layer", "obstacle_layer", "inflation_layer"]

obstacle_layer:
  plugin: "nav2_costmap_2d::ObstacleLayer"
  enabled: true

  # Whether to clear any occupied cells under robot footprint.
  footprint_clearing_enabled: true

  # Maximum height to add return to occupancy grid.
  max_obstacle_height: 2.0 # default: 2.0

  # Enum for method to add data to master costmap.
  # 0 - Overwrite: Overwrite master costmap with every valid observation.
  # 1 - Max: Sets the new value to the maximum of the master_grid’s value and this layer’s value.
  # 2 - MaxWithoutUnknownOverwrite: Sets the new value to the maximum of the master_grid’s value and this layer’s value. If the master value is NO_INFORMATION, it is NOT overwritten.
  # It can be used to make sure that the static map is the dominant source of information, and prevent the robot to go through places that are not present in the static map.
  combination_method: 1 # default: 1

  # List of mapped sources of data.
  observation_sources: main_lidar

  # Data source: main_lidar
  main_lidar:
    # Topic of data.
    topic: /main_lidar/scan
    # Frame of sensor, to use if not provided by message.
    sensor_frame: ""
    # How long to store messages in a buffer to add to costmap before removing them (s).
    observation_persistence: 0.0
    # Expected rate to get new data from sensor.
    expected_update_rate: 0.0
    # Data type of input, LaserScan or PointCloud2.
    data_type: "LaserScan"
    # Minimum height to add return to occupancy grid.
    min_obstacle_height: 0.0
    # Maximum height to add return to occupancy grid.
    max_obstacle_height: 2.0
    # Are infinite returns from laser scanners valid measurements to raycast.
    inf_is_valid: false
    # Whether source should mark in costmap.
    marking: true
    # Whether source should raytrace clear in costmap.
    clearing: true
    # Maximum range to mark obstacles in costmap.
    obstacle_max_range: 10.0
    # Minimum range to mark obstacles in costmap.
    obstacle_min_range: 0.5
    # Maximum range to raytrace clear obstacles from costmap.
    raytrace_max_range: 5.0
    # Minimum range to raytrace clear obstacles from costmap.
    raytrace_min_range: 0.0

# This layer places an exponential decay functions around obstacles to increase cost to traverse near collision. It also places a lethal cost around obstacles within the robot's fully inscribed radius - even if a robot is non-circular for optimized first-order collision checking.
inflation_layer:
  plugin: "nav2_costmap_2d::InflationLayer"
  enable: true # default: true

  # Radius to inflate costmap around lethal obstacles.
  inflation_radius: 1.1 # default: 0.55
  # Exponential decay factor across inflation radius.
  cost_scaling_factor: 5.0 # default: 10.0

  # Whether to inflate unknown cells as if lethal.
  inflate_unknown: false # default: false
  # Whether to inflate unknown cells.
  inflate_around_unknown: false # default: false